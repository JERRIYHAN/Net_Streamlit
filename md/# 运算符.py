import streamlit as st
a='''# 运算符

## 逻辑运算符
|运算符|描述|实例|
|:-|:-|:-|
|&& 且|称为逻辑与运算符。如果两个操作数都非零，则条件为真。|(A && B) 为假。|
|\|\| 或|称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。|(A \|\| B) 为真。|
|! 非|称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。|!(A && B) 为真。|

## 位运算符（用于二进制数各位运算）
& 且
| 或
^ 异或：特殊的“或”，纯粹的“不同”
* 1和0不同，故输出1；1和1相同，故输出0

~ 取反
* 对每个数位取反
* ~1=-2;   ~0=-1; 取反前后和为-1（补码）
  
<< 向左移动指定的位数
* 左边的二进制位丢弃，右边补0
* 左移 n 位相当于乘以 2 的 n 次方。
  
\>>  向右移动指定的位数
* 二进制右移运算符
* 将一个数的各二进制位全部右移若干位，正数左补 0，负数左补 1，右边丢弃。

## 运算符优先级
|类别 |运算符 |结合性 |
|:-:|:-:|:-:|
|后缀 |() [] -> . ++ - -  |从左到右 |
|一元 |+ - ! ~ ++ - - (type)* & sizeof |从右到左 |
|乘除 |* / % |从左到右 |
|加减 |+ - |从左到右 |
|移位 |<< >> |从左到右 |
|关系 |< <= > >= |从左到右 |
|相等 |== != |从左到右 |
|位与 AND |& |从左到右 |
|位异或 XOR |^ |从左到右 |
|位或 OR |\| |从左到右 |
|逻辑与 AND |&& |从左到右 |
|逻辑或 OR |\|\| |从左到右 |
|条件 |?: |从右到左 |
|赋值 |= += -= *= /= %=>>= <<= &= ^= \|= |从右到左 |
|逗号 |, |从左到右|

## 🌰
1. 利用异或 ^ 来交换两个数的值，而且不引入其他变量。
``` c
unsigned int a=60;  //0011 1100
unsigned int b=13;  //0000 1101
a=a^b;              //a=a^b=0011 0001
b=a^b;              //b=a^b=0011 1100  相当于b1=(a^b)^b
a=a^b;              //a=a^b=0000 1101  相当于a1=(a^b)^((a^b)^b)
```

## 连续赋值
 a=b=c: 将c赋给a,b'''

st.markdown(a)